subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
~pal1(c$total)
spdf_departement <- readOGR(dsn=path.expand("~/R/funwithR/data/ne_110m_land"), layer="ne_110m_land")
colorBin("RdYlGn", domain = c$total, bins = bins)
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
map_1
names(c)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend("Total Pass Rate",pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
map_1
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(title="Total Pass Rate",pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
map_1
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(title="Total Pass Rate",pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright",title="Bac Pass Rate")
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7,
position = "bottomright",title="Bac Pass Rate")
map_1
runApp()
runApp()
runApp()
runApp()
runApp()
max(c$ES)
max(c$S)
max(c$L)
max(c$total)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
library(shiny)
library(dplyr)
library(ggplot2)
library(maps)
library(stringr)
library(RColorBrewer)
library(reshape2)
library(plotly)
library(mapproj)
library(rgdal)
getwd()
setwd("C:/Users/trist/Downloads/Lycee")
data <- read.csv(file = "Lycee_Data.csv")
a = data %>% select(.,Departement,Groupe,Taux_L,Taux_ES,Taux_S,Taux_Tech,Taux_Total,nb_L)
h = a %>% group_by(.,Departement)
c = summarise(h,L = round(mean(Taux_L),1),ES = round(mean(Taux_ES),1),S = round(mean(Taux_S),1),total = round(mean(Taux_Total),1))
length(c$total)
c
#########Code for bar charts comparing technical vs non-technical
#########
e = data %>% select(.,Departement,Groupe,Taux_L,Taux_ES,Taux_S,Taux_Tech,Taux_Total,nb_L)
f = e %>% group_by(.,Groupe)
summarise(f,L = mean(Taux_L),ES = mean(Taux_ES),S = mean(Taux_S),total = mean(Taux_Total))
data.m = melt(data,id.vars = "Groupe", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group = ggplot(data.m) + geom_boxplot(aes(x=Groupe,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for Schools Offering a Tech Diploma")
box_group
############# passing rates for all
############
data.m2 = melt(data,id.vars = "Total", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group2 = ggplot(data.m2) + geom_boxplot(aes(x=Total,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for all Schools Confounded")
box_group2
###### secteur prive vs publique
##########
data.m1 = melt(data,id.vars = "Secteur", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group1 = ggplot(data.m1) + geom_boxplot(aes(x=Secteur,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for Private & Public Schools")
box_group1
##########attendance by filiere
#########
sums = data.frame("Section" = c("S","ES","L","Tech"), "Nb_of_Students" = c(sum(data$nb_S),sum(data$nb_ES),sum(data$nb_L),sum(data$nb_Tech)))
p<-ggplot(data=sums, aes(x=sums$Section, y=sums$Nb_of_Students)) +
geom_bar(stat="identity") +
scale_y_continuous(name = "Number of students",
breaks = seq(0, 170000, 10000),
limits=c(0, 170000)) +
labs(x = "",
y = "",
title = "Student Division")
p
head(data,5)
###### try at a divided plot
######
L = unique(data$Departement)
head(data,3)
table1 = data %>% select(Etablissement,nb_L,nb_ES,nb_S,nb_Total,Taux_L,Taux_ES,Taux_S,Taux_Total)
head(ah,5)
library(DT)
library(ggplot2)
require("maptools")
library(maptools)
library(rgdal)
library(rgeos)
df_departement <- readOGR(
dsn = "shapefiles/departements-20140306-100m-shp",
layer = "departements-20140306-100m", stringsAsFactors = FALSE
)
df_departement <- ggplot2::fortify(spdf_departement, region = "code_insee")
df_departement %>%
filter(str_length(id) == 2)
bins <- c(0,85,86,87,89,90,91,92,93,94,95,96,97,98,100)
pal1 <- colorBin("RdYlGn", domain = c$total, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g %% pass rate",
c$Departement, c$total
) %>% lapply(htmltools::HTML)
L1 = c("L","ES","S","total")
spdf_departement$wikipedia
c$total
library(leaflet)
library(stringr)
library(magrittr)
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7,
position = "bottomright",title="Total pass rate %")
map_1
names(c)
max(c$total)
runApp()
(sum(data[which(data$Departement == input$Departements),]$nb_Total - sum(data[which(data$Departement == input$Departements),]$nb_Tech))))
(sum(data[which(data$Departement == input$Departements),]$nb_Total - sum(data[which(data$Departement == input$Departements),]$nb_Tech)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rsconnect")
library(rsconnect)
runApp()
runApp()
View(table1)
rsconnect::setAccountInfo(name='tristandres', token='C017593E96E47373DECACA102A9588DD', secret='PJL4Xrw30kSGC7lBU3Sp7KBwr8S/lJG7cLHugYv/')
rsconnect::setAccountInfo(name='tristandres', token='329DFA3445A1BD14DEDB6FD5B586F751', secret='zdnn468vokEDB+E31PlYGdcydtNFKXt1uTsXKRMN')
rsconnect::setAccountInfo(name='tristandres', token='329DFA3445A1BD14DEDB6FD5B586F751', secret='zdnn468vokEDB+E31PlYGdcydtNFKXt1uTsXKRMN')
library(shiny)
library(dplyr)
library(ggplot2)
library(rsconnect)
library(maps)
library(stringr)
library(RColorBrewer)
library(reshape2)
library(plotly)
library(mapproj)
library(rgdal)
data <- read.csv(file = "Lycee_Data.csv")
a = data %>% select(.,Departement,Groupe,Taux_L,Taux_ES,Taux_S,Taux_Tech,Taux_Total,nb_L)
h = a %>% group_by(.,Departement)
c = summarise(h,L = round(mean(Taux_L),1),ES = round(mean(Taux_ES),1),S = round(mean(Taux_S),1),total = round(mean(Taux_Total),1))
length(c$total)
#########Code for bar charts comparing technical vs non-technical
#########
e = data %>% select(.,Departement,Groupe,Taux_L,Taux_ES,Taux_S,Taux_Tech,Taux_Total,nb_L)
f = e %>% group_by(.,Groupe)
summarise(f,L = mean(Taux_L),ES = mean(Taux_ES),S = mean(Taux_S),total = mean(Taux_Total))
data.m = melt(data,id.vars = "Groupe", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group = ggplot(data.m) + geom_boxplot(aes(x=Groupe,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for Schools Offering a Tech Diploma")
box_group
############# passing rates for all
############
data.m2 = melt(data,id.vars = "Total", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group2 = ggplot(data.m2) + geom_boxplot(aes(x=Total,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for all Schools Confounded")
box_group2
###### secteur prive vs publique
##########
data.m1 = melt(data,id.vars = "Secteur", measure.vars = c("Taux_S","Taux_ES","Taux_L","Taux_Total"))
box_group1 = ggplot(data.m1) + geom_boxplot(aes(x=Secteur,y=value,color=variable)) +
scale_y_continuous(name = "Passing %",
breaks = seq(60, 100, 2),
limits=c(60, 100)) +
labs(x = "",
y = "",
title = "Pass Rates for Private & Public Schools")
box_group1
##########attendance by filiere
#########
sums = data.frame("Section" = c("S","ES","L","Tech"), "Nb_of_Students" = c(sum(data$nb_S),sum(data$nb_ES),sum(data$nb_L),sum(data$nb_Tech)))
p<-ggplot(data=sums, aes(x=sums$Section, y=sums$Nb_of_Students)) +
geom_bar(stat="identity") +
scale_y_continuous(name = "Number of students",
breaks = seq(0, 170000, 10000),
limits=c(0, 170000)) +
labs(x = "",
y = "",
title = "Student Division")
p
head(data,5)
###### try at a divided plot
######
L = unique(data$Departement)
table1 = data %>% select(Etablissement,nb_L,nb_ES,nb_S,nb_Total,Taux_L,Taux_ES,Taux_S,Taux_Total)
library(DT)
library(ggplot2)
require("maptools")
library(maptools)
library(rgdal)
df_departement <- readOGR(
dsn = "shapefiles/departements-20140306-100m-shp",
layer = "departements-20140306-100m", stringsAsFactors = FALSE
)
df_departement <- ggplot2::fortify(spdf_departement, region = "code_insee")
df_departement %>%
filter(str_length(id) == 2)
bins <- c(0,85,86,87,89,90,91,92,93,94,95,96,97,98,100)
pal1 <- colorBin("RdYlGn", domain = c$total, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g %% pass rate",
c$Departement, c$total
) %>% lapply(htmltools::HTML)
L1 = c("L","ES","S","total")
spdf_departement$wikipedia
c$total
library(leaflet)
library(stringr)
library(magrittr)
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7,
position = "bottomright",title="Total pass rate %")
map_1
rsconnect::setAccountInfo(name='tristandres', token='C017593E96E47373DECACA102A9588DD', secret='PJL4Xrw30kSGC7lBU3Sp7KBwr8S/lJG7cLHugYv/')
runApp()
head(df_departement)
head(spdf_departement)
spdf_departement <- readOGR(
"data/departements-20140306-100m-shp/",
layer= "departements-20140306-100m"
)
spdf_departement <- readOGR(
"data/departements-20140306-100m-shp/",
layer= "departements-20140306-100m", stringsAsFactors = FALSE
)
spdf_departement <- readOGR(
dsn = "data/departements-20140306-100m-shp/",
layer= "departements-20140306-100m", stringsAsFactors = FALSE
)
df_departement <- readOGR(
dsn = "shapefiles/departements-20140306-100m-shp",
layer = "departements-20140306-100m", stringsAsFactors = FALSE
)
spdf_departement <- readOGR(
dsn = "shapefiles/departements-20140306-100m-shp",
layer = "departements-20140306-100m", stringsAsFactors = FALSE
)
map_1 = spdf_departement %>%
subset(. , str_length(code_insee) == 2) %>%
leaflet() %>%
addProviderTiles("Esri.WorldStreetMap") %>%
addPolygons(fillColor = ~pal1(c$total),
weight = 2,
opacity = 1,
color = "white",
dashArray = "5",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>% addLegend(pal = pal, values = ~density, opacity = 0.7,
position = "bottomright",title="Total pass rate %")
map_1
install.packages("gpclib")
install.packages("maptools")
install.packages("rgeos")
runApp()
gpclibPermit()
runApp()
runApp()
runApp()
